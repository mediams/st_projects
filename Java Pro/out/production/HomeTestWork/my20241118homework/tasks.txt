1. Создать Supplier randomJoke, который выдает пользователю случайный анекдот из заготовленного исходного списка анекдотов.

2. Создать Consumer, который принимает числа и печатает четные числа в поток System.out, а нечетные числа в System.err.

3. Создать три функции:
    f1 - умножает Integer на 10
    f2 - преобразует Integer в String в формате "<<123>>"
    f3 - считает число символов в String
Составить композитную функцию так, чтобы:
а) функции выполнялись последовательно друг за другом f1 -> f2 -> f3
Input:
777
Output:
8
б) в порядке f3 -> f1 -> f2
Input:
"Hello!"
Output:
"<<60>>"

4.Написать метод reduce(), который на вход принимает список чисел, оператор двух аргументов и начальное значение.
public static Integer reduce(List<Integer> list, BinaryOperator<Integer> operator, Integer basicValue)
Метод накапливает результат применения оператора по всем данных, начиная с начального значения.
Например, вызов
    reduce(list, Integer::sum, 0)) должен вернуть сумму всех чисел
    reduce(list, (i, j) -> i * j, 1) должен вернуть произведение всех чисел